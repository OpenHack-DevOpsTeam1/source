# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#

name: poi - cd
env:
  AZURE_WEBAPP_NAME: openhackyvs74zq0poi
  BASEIMAGETAG: ${{github.sha}}
  ACRNAME: openhackyvs74zq0acr.azurecr.io
  GITOHTEAMDIRPATH: .
  RESOURCE_GROUP: openhackyvs74zq0rg
on:
  push:
    branches:
      #- $default-branch
      - main
    paths: 
      - 'apis/poi/**'
      - '.github/workflows/poi-cd.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push container to ACR
        run: |
          echo "Building API-POI image..."
          echo "Changing directory to $GITOHTEAMDIRPATH/apis/poi/web..."
          cd "$GITOHTEAMDIRPATH/apis/poi/web"
          az acr build --image "devopsoh/api-poi:${BASEIMAGETAG}" --registry $ACRNAME --file Dockerfile .
      
#<Azure Container Registry URI>/<ACR_repository_name>:<Revision Number> where the ACR_repository_name follows the naming convention devopsoh/<image_name>:<tag>.
#openhackyvs74zq0acr.azurecr.io/devopsoh/api-poi:

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'Debug'
      run: |
          echo "Deploying ${{ env.ACRNAME }}/devopsoh/api-poi:${{ env.BASEIMAGETAG }}"
    - name: 'Deploy to Azure Web App for Container'
      id: deploy-staging
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        images: ${{ env.ACRNAME }}/devopsoh/api-poi:${{ env.BASEIMAGETAG }}
        slot-name: 'staging'
    # check
    - uses: actions/checkout@v2
    - name: 'Check staging deployment is successful'
      run: |
        echo "Running polling.sh from $GITOHTEAMDIRPATH/resources/polling.sh"
        cd "$GITOHTEAMDIRPATH/resources"
        # make file runnable
        chmod +x "./polling.sh"
        ./polling.sh "${{ steps.deploy-staging.outputs.webapp-url }}/api/healthcheck/poi" 90
      shell: bash
    # if successful swap stage to prod
    #- name: 'Swap web app deployment slots for blue/green'
      #id: swap-to-prod
      #run: |
        #az webapp deployment slot swap -g ${{env.RESOURCE_GROUP}}  -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging --target-slot production
    - name: 'set traffic to 20'
      run: |
        az webapp traffic-routing set --distribution staging=20 --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{env.RESOURCE_GROUP}}
      shell: bash

  full-deployment:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: 'set traffic to 100'
      run: |
        az webapp deployment slot swap -g ${{env.RESOURCE_GROUP}}  -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging --target-slot production
        az webapp traffic-routing clear --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{env.RESOURCE_GROUP}}
      shell: bash
